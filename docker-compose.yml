version: '3.4'

services:
  orders-api:
    image: ${DOCKER_REGISTRY-}biscottionlineordersapi
    build:
      context: .
      dockerfile: Biscotti.Online.Orders.API/Dockerfile
    ports:
      - "5001:80"
    depends_on:
      - dapr-placement
    networks:
      - default
      - backend

  orders-api-dapr:
    image: "daprio/daprd:1.10.3"
    command: ["./daprd",
      "-app-id","orders-api",
      "-app-port","80",
      "-placement-host-address","dapr-placement:50000",
      "-resources-path", "./components",
      "-config","./configuration/biscotti-online-config.yaml",
      "-log-level","debug"]
    depends_on:
      - sql
      - orders-api
    network_mode: "service:orders-api"
    volumes:
      - "./components/:/components"
      - "./configuration/:/configuration"

  reservations-api:
    image: ${DOCKER_REGISTRY-}biscottionlinereservationsapi
    build:
      context: .
      dockerfile: Biscotti.Online.Reservations.API/Dockerfile
    ports:
      - "5002:80"
    depends_on:
      - dapr-placement
    networks:
      - default
      - backend

  reservations-api-dapr:
    image: "daprio/daprd:1.10.3"
    command: ["./daprd",
      "-app-id","reservations-api",
      "-app-port","80",
      "-placement-host-address","dapr-placement:50000",
      "-resources-path", "./components",
      "-config","./configuration/biscotti-online-config.yaml",
      "-log-level","debug"]
    depends_on:
      - sql
      - reservations-api
    network_mode: "service:reservations-api"
    volumes:
      - "./components/:/components"
      - "./configuration/:/configuration"

  dapr-placement:
    image: "daprio/dapr:1.10.3"
    command: ["./placement", "-port", "50000","-log-level","debug"]
    ports:
      - "50000:50000"
    networks:
      - default
      - backend

  redis:
    image: redis:latest
    command: >
      --requirepass y4dPrhPM55GhWSQw
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  
  sql:
    image: mcr.microsoft.com/azure-sql-edge
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "y4dPrhPM55GhWSQw"
    volumes:
      - sql-data:/var/opt/mssql

volumes:
  redis-data:
  sql-data:

networks:
  default:
  backend: